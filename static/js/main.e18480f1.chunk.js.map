{"version":3,"sources":["components/util.js","components/Products.js","components/Filter.js","components/Cart.js","App.js","index.js"],"names":["Formatcurrency","num","Number","toFixed","toLocaleString","Products","props","openModal","product","setState","closeModal","state","this","className","map","key","id","href","onClick","src","image","alt","title","price","addToCart","isOpen","onRequestClose","description","availableSizes","x","e","Component","Filter","count","value","sort","onChange","sortProducts","size","filterProducts","Cart","handleInput","target","name","createOrder","preventDefault","order","email","address","cartItems","showCheckout","length","item","type","removFromCart","reduce","a","c","onSubmit","required","App","alert","slice","filter","localStorage","setItem","JSON","stringify","alreadyInCart","forEach","push","event","console","log","products","data","indexOf","b","getItem","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18480f1.chunk.js","sourcesContent":["export default function Formatcurrency(num){\r\n    return \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \"\r\n}\r\n","import React, { Component } from 'react'\r\nimport Formatcurrency from './util';\r\nimport Modal from 'react-modal';\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            product:null\r\n        };\r\n    }\r\n    openModal = (product) => {\r\n        this.setState({product});\r\n    }\r\n    closeModal = () => {\r\n        this.setState({product: null});\r\n    }\r\n    render() {\r\n        const {product} = this.state;\r\n        return (\r\n            <>\r\n                <ul className=\"productsList\">\r\n                        {this.props.product.map(product => \r\n                            <li key={product.id}>\r\n                                <div className=\"product\">\r\n                                    <a href={\"#\" + product.id} onClick={()=> this.openModal(product)}>\r\n                                        <div className=\"product-img\">\r\n                                            <img src={product.image} alt={product.title} />\r\n                                        </div>\r\n                                        <p>{product.title}</p>\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"product-price\">\r\n                                    <div className=\"price\">\r\n                                        {Formatcurrency(product.price)}\r\n                                    </div>\r\n                                    <button className=\"button primary\" onClick={()=> this.props.addToCart(product)}>\r\n                                        Add to Cart\r\n                                    </button>\r\n                                </div>\r\n                            </li>\r\n                        )}\r\n                </ul>\r\n                {\r\n                    product && (\r\n                        <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n                            <button className=\"close-modal\" onClick={this.closeModal}>&times;</button>\r\n                            <div className=\"product-details\">\r\n                                <div className=\"product-details-img\">\r\n                                    <img src={product.image} alt={product.title} />\r\n                                </div>\r\n                                <div className=\"product-details-desc\">\r\n                                    <p><strong>{product.title}</strong></p>\r\n                                    <p>{product.description}</p>\r\n                                    <p>\r\n                                        Available Sizes: {\" \"}\r\n                                        {product.availableSizes.map((x) =>(\r\n                                            <span>\r\n                                                {\" \"} \r\n                                                <button className=\"button\">{x}</button>\r\n                                            </span>\r\n                                        ))}\r\n                                    </p>\r\n                                    <div className=\"product-price\">\r\n                                        <div>{Formatcurrency(product.price)}</div>\r\n                                        <button className=\"button primary\" onClick={(e)=> {\r\n                                                this.props.addToCart(product); \r\n                                                this.closeModal();\r\n                                            }}>\r\n                                            Add to Cart\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    )\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products","import React, { Component } from 'react'\r\n\r\nclass Filter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"filter\">\r\n                <div className=\"filter-result\">{this.props.count} results</div>  \r\n                <div className=\"filter-order\"> Order {\"\"} \r\n                    <select value={this.props.sort} onChange={this.props.sortProducts}>\r\n                        <option>Latest</option>\r\n                        <option value=\"lowest\">Lowest</option>\r\n                        <option value=\"highest\">highest</option>\r\n                    </select>\r\n                </div> \r\n                <div className=\"filter-size\"> Size {\"\"} \r\n                    <select value={this.props.size} onChange={this.props.filterProducts}>\r\n                        <option value=\"\">ALL</option>\r\n                        <option value=\"S\">S</option>\r\n                        <option value=\"M\">M</option>\r\n                        <option value=\"L\">L</option>\r\n                        <option value=\"XL\">XL</option>\r\n                        <option value=\"XXL\">XXL</option>\r\n                    </select>\r\n                </div>           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter\r\n","import React, { Component } from 'react'\r\nimport Formatcurrency from './util';\r\nclass Cart extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            showCheckout:false,\r\n            name:\"\",\r\n            email:\"\",\r\n            address:\"\",\r\n        }\r\n    }\r\n    handleInput = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    createOrder = (e) => {\r\n        e.preventDefault();\r\n        const order = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            address: this.state.address,\r\n            cartItems: this.props.cartItems\r\n        };\r\n        // for save order //\r\n        this.props.createOrder(order)\r\n    }\r\n    render() {\r\n        const {cartItems}= this.props;\r\n        return (\r\n            <>\r\n                <div className=\"cartItems\">\r\n                    {cartItems.length === 0? (<p>You have 0 items in the cart</p>)\r\n                    :\r\n                    (<p>You have {cartItems.length} items in the cart</p>)}\r\n                </div>\r\n                <ul className=\"cartItemsList\">\r\n                    {cartItems.map(item => \r\n                    <li key={item.id}>\r\n                        <div className=\"itemImage\">\r\n                            <img src={item.image} alt={item.title}/>\r\n                        </div>\r\n                        <div className=\"itemDetail\">\r\n                            <p>{item.title}</p>\r\n                            <div className=\"itemTotal\">\r\n                                <span>Total: {Formatcurrency(item.price)} x {item.count}</span>\r\n                                <button type=\"button\" className=\"button primary\" onClick={() => this.props.removFromCart(item)}>Remove</button>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                    )}\r\n                </ul>\r\n                {cartItems.length !== 0 && (<div className=\"cartProceed\">\r\n                    <span>Total:{''} {Formatcurrency(cartItems.reduce((a,c) => a + c.price * c.count, 0))}</span>\r\n                    <button type=\"button\" className=\"button primary\" onClick={()=>{this.setState({showCheckout:true})}}>Proceed</button>\r\n                </div>)}\r\n                {this.state.showCheckout && (\r\n                    <div className=\"cart\">\r\n                        <form onSubmit={this.createOrder}>\r\n                            <ul className=\"formContainer\">\r\n                                <li>\r\n                                    <label>Email</label>\r\n                                    <input type=\"email\" name=\"email\" required onChange={this.handleInput} />\r\n                                </li>\r\n                                <li>\r\n                                    <label>Name</label>\r\n                                    <input type=\"text\" name=\"name\" required onChange={this.handleInput} />\r\n                                </li>\r\n                                <li>\r\n                                    <label>Address</label>\r\n                                    <input type=\"text\" name=\"address\" onChange={this.handleInput} />\r\n                                </li>\r\n                                <li>\r\n                                    <button type=\"submit\" className=\"button primary\">Checkout</button>\r\n                                </li>\r\n                            </ul>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cart","import React, {Component} from 'react';\nimport data from './data.json';\nimport Products from './components/Products';\nimport Filter from './components/Filter';\nimport Cart from './components/Cart';\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      products: data.products,\n      size: \"\",\n      sort: \"\",\n      cartItems:localStorage.getItem(\"cartItems\")? JSON.parse(localStorage.getItem(\"cartItems\")):[]\n    }\n  }\n  createOrder = (order) => {\n    alert('Need to save order for' + order.name)\n  }\n  removFromCart =(item) => {\n    const cartItems = this.state.cartItems.slice();\n    this.setState({cartItems:cartItems.filter((x)=> x.id !== item.id)});\n    localStorage.setItem(\"cartItems\", JSON.stringify(this.state.cartItems)); \n  }\n  addToCart = (product) =>{\n    const cartItems = this.state.cartItems.slice();\n    let alreadyInCart =false;\n    cartItems.forEach(item => {\n      if(item.id === product.id){\n        item.count++;\n        alreadyInCart = true;\n      }\n    });\n    if(!alreadyInCart){\n      cartItems.push({...product, count: 1});\n    }\n    this.setState({cartItems});\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  }\n  filterProducts = (event) => {\n    console.log(event.target.value);\n    if(event.target.value === \"\"){\n      this.setState({\n        size:event.target.value,\n        products: data.products\n      })\n    }else{\n      this.setState({\n        size: event.target.value,\n        products: data.products.filter(product => product.availableSizes.indexOf(event.target.value)>=0)\n      })\n    }\n  }\n  sortProducts =(event) => {\n    const sort= event.target.value;\n    console.log(event.target.value);\n    this.setState((state) =>({\n      sort:sort,\n      products: this.state.products.slice().sort((a,b) =>{\n        return sort === \"lowest\"\n        ? a.price > b.price\n        ? 1\n        :-1\n        : sort === \"highest\"\n        ? a.price < b.price\n        ? 1\n        :-1\n        : a.id > b.id\n        ? 1\n        :-1\n      })\n    }));\n  }\n  render(){\n    return(\n      <div className=\"grid-container\">\n        <header>\n          <a href=\"/\">React Shopping Cart</a>\n        </header>\n        <main>\n          <div className=\"content\">\n            <div className=\"main\">\n              <Filter count={this.state.products.length} size={this.state.size} filterProducts={this.filterProducts} sort={this.state.sort} sortProducts={this.sortProducts}/>\n              <Products product={this.state.products} addToCart={this.addToCart}/>\n            </div>\n            <div className=\"sidebar\">\n                <Cart cartItems={this.state.cartItems} removFromCart={this.removFromCart} createOrder={this.createOrder}/>\n            </div>\n          </div>\n        </main>\n        <footer>\n          All rights reserved\n        </footer>\n      </div>\n    )\n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}